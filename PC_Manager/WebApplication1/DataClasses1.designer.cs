#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication1
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PC_Manager")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void Insertorder(order instance);
    partial void Updateorder(order instance);
    partial void Deleteorder(order instance);
    partial void Insertstaff(staff instance);
    partial void Updatestaff(staff instance);
    partial void Deletestaff(staff instance);
    partial void Inserttype(type instance);
    partial void Updatetype(type instance);
    partial void Deletetype(type instance);
    partial void Insertusers(users instance);
    partial void Updateusers(users instance);
    partial void Deleteusers(users instance);
    partial void Insertproposal(proposal instance);
    partial void Updateproposal(proposal instance);
    partial void Deleteproposal(proposal instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["PC_ManagerConnectionString1"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<store> store
		{
			get
			{
				return this.GetTable<store>();
			}
		}
		
		public System.Data.Linq.Table<order> order
		{
			get
			{
				return this.GetTable<order>();
			}
		}
		
		public System.Data.Linq.Table<staff> staff
		{
			get
			{
				return this.GetTable<staff>();
			}
		}
		
		public System.Data.Linq.Table<type> type
		{
			get
			{
				return this.GetTable<type>();
			}
		}
		
		public System.Data.Linq.Table<users> users
		{
			get
			{
				return this.GetTable<users>();
			}
		}
		
		public System.Data.Linq.Table<proposal> proposal
		{
			get
			{
				return this.GetTable<proposal>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.add_staff")]
		public int add_staff([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(10)")] string sid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(20)")] string sname, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(16)")] string passwd, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(20)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> status)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), sid, sname, passwd, email, status);
			status = ((System.Nullable<int>)(result.GetParameterValue(4)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.add_user")]
		public int add_user([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(10)")] string uid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(20)")] string uname, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(16)")] string passwd, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(20)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> status)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), uid, uname, passwd, email, status);
			status = ((System.Nullable<int>)(result.GetParameterValue(4)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.get_page")]
		public ISingleResult<get_pageResult> get_page([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> page_num)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), page_num);
			return ((ISingleResult<get_pageResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.get_proposal")]
		public ISingleResult<get_proposalResult> get_proposal([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pid)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pid);
			return ((ISingleResult<get_proposalResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.get_price")]
		public int get_price([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] ref System.Nullable<double> price)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, price);
			price = ((System.Nullable<double>)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.get_total")]
		public ISingleResult<get_totalResult> get_total([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] ref System.Nullable<double> total)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), total);
			total = ((System.Nullable<double>)(result.GetParameterValue(0)));
			return ((ISingleResult<get_totalResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.modify")]
		public int modify([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(10)")] string type, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(20)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(40)")] string detail, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> price, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> status)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, type, name, detail, price, status);
			status = ((System.Nullable<int>)(result.GetParameterValue(5)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.order_add")]
		public int order_add([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string remark, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(20)")] string uid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(20)")] string sid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> final_price, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(30)")] string date, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> status)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), remark, pid, uid, sid, final_price, date, status);
			status = ((System.Nullable<int>)(result.GetParameterValue(6)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.order_add_to_id")]
		public int order_add_to_id([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string remark, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> oid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(20)")] string uid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(20)")] string sid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> final_price, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(30)")] string date, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> status)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), remark, oid, pid, uid, sid, final_price, date, status);
			status = ((System.Nullable<int>)(result.GetParameterValue(7)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.proposal_attach")]
		public int proposal_attach([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string type, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> status)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pid, type, name, status);
			status = ((System.Nullable<int>)(result.GetParameterValue(3)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.proposalAdd")]
		public int proposalAdd([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(20)")] string remark, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> status)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), remark, status);
			status = ((System.Nullable<int>)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.search_in_all")]
		public ISingleResult<search_in_allResult> search_in_all([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> status)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), name, status);
			status = ((System.Nullable<int>)(result.GetParameterValue(1)));
			return ((ISingleResult<search_in_allResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.search_in_type")]
		public ISingleResult<search_in_typeResult> search_in_type([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string type, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> status)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), name, type, status);
			status = ((System.Nullable<int>)(result.GetParameterValue(2)));
			return ((ISingleResult<search_in_typeResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.select_all")]
		public ISingleResult<select_allResult> select_all()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<select_allResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.select_type")]
		public ISingleResult<select_typeResult> select_type([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(20)")] string type, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> status)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), type, status);
			status = ((System.Nullable<int>)(result.GetParameterValue(1)));
			return ((ISingleResult<select_typeResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.selectAll")]
		public ISingleResult<selectAllResult> selectAll()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<selectAllResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.selectType")]
		public ISingleResult<selectTypeResult> selectType([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(20)")] string type, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> status)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), type, status);
			status = ((System.Nullable<int>)(result.GetParameterValue(1)));
			return ((ISingleResult<selectTypeResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.staff_login")]
		public int staff_login([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(10)")] string sid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(16)")] string passwd, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> status)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), sid, passwd, status);
			status = ((System.Nullable<int>)(result.GetParameterValue(2)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.user_login")]
		public int user_login([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(10)")] string uid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(16)")] string passwd, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> status)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), uid, passwd, status);
			status = ((System.Nullable<int>)(result.GetParameterValue(2)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.user_order")]
		public ISingleResult<user_orderResult> user_order([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(20)")] string uid)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), uid);
			return ((ISingleResult<user_orderResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.store_add")]
		public int store_add([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string type, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string detail, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> price, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> status)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), type, name, detail, price, status);
			status = ((System.Nullable<int>)(result.GetParameterValue(4)));
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.store")]
	public partial class store
	{
		
		private int _id;
		
		private string _type;
		
		private string _name;
		
		private string _detail;
		
		private System.Nullable<double> _price;
		
		public store()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this._type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NChar(20)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this._name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_detail", DbType="NChar(40)")]
		public string detail
		{
			get
			{
				return this._detail;
			}
			set
			{
				if ((this._detail != value))
				{
					this._detail = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Float")]
		public System.Nullable<double> price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this._price = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[order]")]
	public partial class order : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _oid;
		
		private string _pid;
		
		private string _uid;
		
		private string _sid;
		
		private System.Nullable<double> _final_price;
		
		private System.Nullable<System.DateTime> _date;
		
		private string _status;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnoidChanging(string value);
    partial void OnoidChanged();
    partial void OnpidChanging(string value);
    partial void OnpidChanged();
    partial void OnuidChanging(string value);
    partial void OnuidChanged();
    partial void OnsidChanging(string value);
    partial void OnsidChanged();
    partial void Onfinal_priceChanging(System.Nullable<double> value);
    partial void Onfinal_priceChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    #endregion
		
		public order()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_oid", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string oid
		{
			get
			{
				return this._oid;
			}
			set
			{
				if ((this._oid != value))
				{
					this.OnoidChanging(value);
					this.SendPropertyChanging();
					this._oid = value;
					this.SendPropertyChanged("oid");
					this.OnoidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pid", DbType="NVarChar(50)")]
		public string pid
		{
			get
			{
				return this._pid;
			}
			set
			{
				if ((this._pid != value))
				{
					this.OnpidChanging(value);
					this.SendPropertyChanging();
					this._pid = value;
					this.SendPropertyChanged("pid");
					this.OnpidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uid", DbType="NVarChar(50)")]
		public string uid
		{
			get
			{
				return this._uid;
			}
			set
			{
				if ((this._uid != value))
				{
					this.OnuidChanging(value);
					this.SendPropertyChanging();
					this._uid = value;
					this.SendPropertyChanged("uid");
					this.OnuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sid", DbType="NVarChar(50)")]
		public string sid
		{
			get
			{
				return this._sid;
			}
			set
			{
				if ((this._sid != value))
				{
					this.OnsidChanging(value);
					this.SendPropertyChanging();
					this._sid = value;
					this.SendPropertyChanged("sid");
					this.OnsidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_final_price", DbType="Float")]
		public System.Nullable<double> final_price
		{
			get
			{
				return this._final_price;
			}
			set
			{
				if ((this._final_price != value))
				{
					this.Onfinal_priceChanging(value);
					this.SendPropertyChanging();
					this._final_price = value;
					this.SendPropertyChanged("final_price");
					this.Onfinal_priceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="Date")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="NVarChar(50)")]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.staff")]
	public partial class staff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _sid;
		
		private string _sname;
		
		private string _passwd;
		
		private string _email;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnsidChanging(string value);
    partial void OnsidChanged();
    partial void OnsnameChanging(string value);
    partial void OnsnameChanged();
    partial void OnpasswdChanging(string value);
    partial void OnpasswdChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    #endregion
		
		public staff()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sid", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string sid
		{
			get
			{
				return this._sid;
			}
			set
			{
				if ((this._sid != value))
				{
					this.OnsidChanging(value);
					this.SendPropertyChanging();
					this._sid = value;
					this.SendPropertyChanged("sid");
					this.OnsidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sname", DbType="NVarChar(50)")]
		public string sname
		{
			get
			{
				return this._sname;
			}
			set
			{
				if ((this._sname != value))
				{
					this.OnsnameChanging(value);
					this.SendPropertyChanging();
					this._sname = value;
					this.SendPropertyChanged("sname");
					this.OnsnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_passwd", DbType="NVarChar(50)")]
		public string passwd
		{
			get
			{
				return this._passwd;
			}
			set
			{
				if ((this._passwd != value))
				{
					this.OnpasswdChanging(value);
					this.SendPropertyChanging();
					this._passwd = value;
					this.SendPropertyChanged("passwd");
					this.OnpasswdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(50)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.type")]
	public partial class type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _tid;
		
		private string _type1;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntidChanging(int value);
    partial void OntidChanged();
    partial void Ontype1Changing(string value);
    partial void Ontype1Changed();
    #endregion
		
		public type()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int tid
		{
			get
			{
				return this._tid;
			}
			set
			{
				if ((this._tid != value))
				{
					this.OntidChanging(value);
					this.SendPropertyChanging();
					this._tid = value;
					this.SendPropertyChanged("tid");
					this.OntidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="type", Storage="_type1", DbType="NVarChar(50)")]
		public string type1
		{
			get
			{
				return this._type1;
			}
			set
			{
				if ((this._type1 != value))
				{
					this.Ontype1Changing(value);
					this.SendPropertyChanging();
					this._type1 = value;
					this.SendPropertyChanged("type1");
					this.Ontype1Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.users")]
	public partial class users : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _uid;
		
		private string _uname;
		
		private string _passwd;
		
		private string _email;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnuidChanging(string value);
    partial void OnuidChanged();
    partial void OnunameChanging(string value);
    partial void OnunameChanged();
    partial void OnpasswdChanging(string value);
    partial void OnpasswdChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    #endregion
		
		public users()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uid", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string uid
		{
			get
			{
				return this._uid;
			}
			set
			{
				if ((this._uid != value))
				{
					this.OnuidChanging(value);
					this.SendPropertyChanging();
					this._uid = value;
					this.SendPropertyChanged("uid");
					this.OnuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uname", DbType="NVarChar(50)")]
		public string uname
		{
			get
			{
				return this._uname;
			}
			set
			{
				if ((this._uname != value))
				{
					this.OnunameChanging(value);
					this.SendPropertyChanging();
					this._uname = value;
					this.SendPropertyChanged("uname");
					this.OnunameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_passwd", DbType="NVarChar(50)")]
		public string passwd
		{
			get
			{
				return this._passwd;
			}
			set
			{
				if ((this._passwd != value))
				{
					this.OnpasswdChanging(value);
					this.SendPropertyChanging();
					this._passwd = value;
					this.SendPropertyChanged("passwd");
					this.OnpasswdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(50)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.proposal")]
	public partial class proposal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _pid;
		
		private string _remark;
		
		private string _主板;
		
		private string _CPU;
		
		private string _内存;
		
		private string _散热;
		
		private string _显卡;
		
		private string _硬盘;
		
		private string _机箱;
		
		private string _显示器;
		
		private string _键盘;
		
		private string _鼠标;
		
		private string _电源;
		
		private System.Nullable<double> _total;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpidChanging(int value);
    partial void OnpidChanged();
    partial void OnremarkChanging(string value);
    partial void OnremarkChanged();
    partial void On主板Changing(string value);
    partial void On主板Changed();
    partial void OnCPUChanging(string value);
    partial void OnCPUChanged();
    partial void On内存Changing(string value);
    partial void On内存Changed();
    partial void On散热Changing(string value);
    partial void On散热Changed();
    partial void On显卡Changing(string value);
    partial void On显卡Changed();
    partial void On硬盘Changing(string value);
    partial void On硬盘Changed();
    partial void On机箱Changing(string value);
    partial void On机箱Changed();
    partial void On显示器Changing(string value);
    partial void On显示器Changed();
    partial void On键盘Changing(string value);
    partial void On键盘Changed();
    partial void On鼠标Changing(string value);
    partial void On鼠标Changed();
    partial void On电源Changing(string value);
    partial void On电源Changed();
    partial void OntotalChanging(System.Nullable<double> value);
    partial void OntotalChanged();
    #endregion
		
		public proposal()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int pid
		{
			get
			{
				return this._pid;
			}
			set
			{
				if ((this._pid != value))
				{
					this.OnpidChanging(value);
					this.SendPropertyChanging();
					this._pid = value;
					this.SendPropertyChanged("pid");
					this.OnpidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_remark", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this.OnremarkChanging(value);
					this.SendPropertyChanging();
					this._remark = value;
					this.SendPropertyChanged("remark");
					this.OnremarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_主板", DbType="NVarChar(50)")]
		public string 主板
		{
			get
			{
				return this._主板;
			}
			set
			{
				if ((this._主板 != value))
				{
					this.On主板Changing(value);
					this.SendPropertyChanging();
					this._主板 = value;
					this.SendPropertyChanged("主板");
					this.On主板Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CPU", DbType="NVarChar(50)")]
		public string CPU
		{
			get
			{
				return this._CPU;
			}
			set
			{
				if ((this._CPU != value))
				{
					this.OnCPUChanging(value);
					this.SendPropertyChanging();
					this._CPU = value;
					this.SendPropertyChanged("CPU");
					this.OnCPUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_内存", DbType="NVarChar(50)")]
		public string 内存
		{
			get
			{
				return this._内存;
			}
			set
			{
				if ((this._内存 != value))
				{
					this.On内存Changing(value);
					this.SendPropertyChanging();
					this._内存 = value;
					this.SendPropertyChanged("内存");
					this.On内存Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_散热", DbType="NVarChar(50)")]
		public string 散热
		{
			get
			{
				return this._散热;
			}
			set
			{
				if ((this._散热 != value))
				{
					this.On散热Changing(value);
					this.SendPropertyChanging();
					this._散热 = value;
					this.SendPropertyChanged("散热");
					this.On散热Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_显卡", DbType="NVarChar(50)")]
		public string 显卡
		{
			get
			{
				return this._显卡;
			}
			set
			{
				if ((this._显卡 != value))
				{
					this.On显卡Changing(value);
					this.SendPropertyChanging();
					this._显卡 = value;
					this.SendPropertyChanged("显卡");
					this.On显卡Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_硬盘", DbType="NVarChar(50)")]
		public string 硬盘
		{
			get
			{
				return this._硬盘;
			}
			set
			{
				if ((this._硬盘 != value))
				{
					this.On硬盘Changing(value);
					this.SendPropertyChanging();
					this._硬盘 = value;
					this.SendPropertyChanged("硬盘");
					this.On硬盘Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_机箱", DbType="NVarChar(50)")]
		public string 机箱
		{
			get
			{
				return this._机箱;
			}
			set
			{
				if ((this._机箱 != value))
				{
					this.On机箱Changing(value);
					this.SendPropertyChanging();
					this._机箱 = value;
					this.SendPropertyChanged("机箱");
					this.On机箱Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_显示器", DbType="NVarChar(50)")]
		public string 显示器
		{
			get
			{
				return this._显示器;
			}
			set
			{
				if ((this._显示器 != value))
				{
					this.On显示器Changing(value);
					this.SendPropertyChanging();
					this._显示器 = value;
					this.SendPropertyChanged("显示器");
					this.On显示器Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_键盘", DbType="NVarChar(50)")]
		public string 键盘
		{
			get
			{
				return this._键盘;
			}
			set
			{
				if ((this._键盘 != value))
				{
					this.On键盘Changing(value);
					this.SendPropertyChanging();
					this._键盘 = value;
					this.SendPropertyChanged("键盘");
					this.On键盘Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_鼠标", DbType="NVarChar(50)")]
		public string 鼠标
		{
			get
			{
				return this._鼠标;
			}
			set
			{
				if ((this._鼠标 != value))
				{
					this.On鼠标Changing(value);
					this.SendPropertyChanging();
					this._鼠标 = value;
					this.SendPropertyChanged("鼠标");
					this.On鼠标Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_电源", DbType="NVarChar(50)")]
		public string 电源
		{
			get
			{
				return this._电源;
			}
			set
			{
				if ((this._电源 != value))
				{
					this.On电源Changing(value);
					this.SendPropertyChanging();
					this._电源 = value;
					this.SendPropertyChanged("电源");
					this.On电源Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total", DbType="Float")]
		public System.Nullable<double> total
		{
			get
			{
				return this._total;
			}
			set
			{
				if ((this._total != value))
				{
					this.OntotalChanging(value);
					this.SendPropertyChanging();
					this._total = value;
					this.SendPropertyChanged("total");
					this.OntotalChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class get_pageResult
	{
		
		private string _类型;
		
		private string _品名;
		
		private string _详情;
		
		private System.Nullable<double> _价格;
		
		public get_pageResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_类型", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string 类型
		{
			get
			{
				return this._类型;
			}
			set
			{
				if ((this._类型 != value))
				{
					this._类型 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_品名", DbType="NVarChar(50)")]
		public string 品名
		{
			get
			{
				return this._品名;
			}
			set
			{
				if ((this._品名 != value))
				{
					this._品名 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_详情", DbType="NVarChar(50)")]
		public string 详情
		{
			get
			{
				return this._详情;
			}
			set
			{
				if ((this._详情 != value))
				{
					this._详情 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_价格", DbType="Float")]
		public System.Nullable<double> 价格
		{
			get
			{
				return this._价格;
			}
			set
			{
				if ((this._价格 != value))
				{
					this._价格 = value;
				}
			}
		}
	}
	
	public partial class get_proposalResult
	{
		
		private int _ID;
		
		private string _备注;
		
		private string _主板;
		
		private string _CPU;
		
		private string _内存;
		
		private string _散热;
		
		private string _显卡;
		
		private string _硬盘;
		
		private string _机箱;
		
		private string _显示器;
		
		private string _键盘;
		
		private string _鼠标;
		
		private string _电源;
		
		private System.Nullable<double> _总计;
		
		public get_proposalResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_备注", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string 备注
		{
			get
			{
				return this._备注;
			}
			set
			{
				if ((this._备注 != value))
				{
					this._备注 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_主板", DbType="NVarChar(50)")]
		public string 主板
		{
			get
			{
				return this._主板;
			}
			set
			{
				if ((this._主板 != value))
				{
					this._主板 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CPU", DbType="NVarChar(50)")]
		public string CPU
		{
			get
			{
				return this._CPU;
			}
			set
			{
				if ((this._CPU != value))
				{
					this._CPU = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_内存", DbType="NVarChar(50)")]
		public string 内存
		{
			get
			{
				return this._内存;
			}
			set
			{
				if ((this._内存 != value))
				{
					this._内存 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_散热", DbType="NVarChar(50)")]
		public string 散热
		{
			get
			{
				return this._散热;
			}
			set
			{
				if ((this._散热 != value))
				{
					this._散热 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_显卡", DbType="NVarChar(50)")]
		public string 显卡
		{
			get
			{
				return this._显卡;
			}
			set
			{
				if ((this._显卡 != value))
				{
					this._显卡 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_硬盘", DbType="NVarChar(50)")]
		public string 硬盘
		{
			get
			{
				return this._硬盘;
			}
			set
			{
				if ((this._硬盘 != value))
				{
					this._硬盘 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_机箱", DbType="NVarChar(50)")]
		public string 机箱
		{
			get
			{
				return this._机箱;
			}
			set
			{
				if ((this._机箱 != value))
				{
					this._机箱 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_显示器", DbType="NVarChar(50)")]
		public string 显示器
		{
			get
			{
				return this._显示器;
			}
			set
			{
				if ((this._显示器 != value))
				{
					this._显示器 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_键盘", DbType="NVarChar(50)")]
		public string 键盘
		{
			get
			{
				return this._键盘;
			}
			set
			{
				if ((this._键盘 != value))
				{
					this._键盘 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_鼠标", DbType="NVarChar(50)")]
		public string 鼠标
		{
			get
			{
				return this._鼠标;
			}
			set
			{
				if ((this._鼠标 != value))
				{
					this._鼠标 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_电源", DbType="NVarChar(50)")]
		public string 电源
		{
			get
			{
				return this._电源;
			}
			set
			{
				if ((this._电源 != value))
				{
					this._电源 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_总计", DbType="Float")]
		public System.Nullable<double> 总计
		{
			get
			{
				return this._总计;
			}
			set
			{
				if ((this._总计 != value))
				{
					this._总计 = value;
				}
			}
		}
	}
	
	public partial class get_totalResult
	{
		
		private System.Nullable<double> _Column1;
		
		public get_totalResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="Float")]
		public System.Nullable<double> Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
	
	public partial class search_in_allResult
	{
		
		private int _id;
		
		private string _类型;
		
		private string _品名;
		
		private string _详情;
		
		private System.Nullable<double> _价格;
		
		public search_in_allResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL")]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_类型", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string 类型
		{
			get
			{
				return this._类型;
			}
			set
			{
				if ((this._类型 != value))
				{
					this._类型 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_品名", DbType="NVarChar(50)")]
		public string 品名
		{
			get
			{
				return this._品名;
			}
			set
			{
				if ((this._品名 != value))
				{
					this._品名 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_详情", DbType="NVarChar(50)")]
		public string 详情
		{
			get
			{
				return this._详情;
			}
			set
			{
				if ((this._详情 != value))
				{
					this._详情 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_价格", DbType="Float")]
		public System.Nullable<double> 价格
		{
			get
			{
				return this._价格;
			}
			set
			{
				if ((this._价格 != value))
				{
					this._价格 = value;
				}
			}
		}
	}
	
	public partial class search_in_typeResult
	{
		
		private int _id;
		
		private string _类型;
		
		private string _品名;
		
		private string _详情;
		
		private System.Nullable<double> _价格;
		
		public search_in_typeResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL")]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_类型", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string 类型
		{
			get
			{
				return this._类型;
			}
			set
			{
				if ((this._类型 != value))
				{
					this._类型 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_品名", DbType="NVarChar(50)")]
		public string 品名
		{
			get
			{
				return this._品名;
			}
			set
			{
				if ((this._品名 != value))
				{
					this._品名 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_详情", DbType="NVarChar(50)")]
		public string 详情
		{
			get
			{
				return this._详情;
			}
			set
			{
				if ((this._详情 != value))
				{
					this._详情 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_价格", DbType="Float")]
		public System.Nullable<double> 价格
		{
			get
			{
				return this._价格;
			}
			set
			{
				if ((this._价格 != value))
				{
					this._价格 = value;
				}
			}
		}
	}
	
	public partial class select_allResult
	{
		
		private int _id;
		
		private string _type;
		
		private string _name;
		
		private string _detail;
		
		private System.Nullable<double> _price;
		
		public select_allResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL")]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this._type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this._name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_detail", DbType="NVarChar(50)")]
		public string detail
		{
			get
			{
				return this._detail;
			}
			set
			{
				if ((this._detail != value))
				{
					this._detail = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Float")]
		public System.Nullable<double> price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this._price = value;
				}
			}
		}
	}
	
	public partial class select_typeResult
	{
		
		private int _id;
		
		private string _type;
		
		private string _name;
		
		private string _detail;
		
		private System.Nullable<double> _price;
		
		public select_typeResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL")]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this._type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this._name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_detail", DbType="NVarChar(50)")]
		public string detail
		{
			get
			{
				return this._detail;
			}
			set
			{
				if ((this._detail != value))
				{
					this._detail = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Float")]
		public System.Nullable<double> price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this._price = value;
				}
			}
		}
	}
	
	public partial class selectAllResult
	{
		
		private int _id;
		
		private string _类型;
		
		private string _品名;
		
		private string _详情;
		
		private System.Nullable<double> _价格;
		
		public selectAllResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL")]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_类型", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string 类型
		{
			get
			{
				return this._类型;
			}
			set
			{
				if ((this._类型 != value))
				{
					this._类型 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_品名", DbType="NVarChar(50)")]
		public string 品名
		{
			get
			{
				return this._品名;
			}
			set
			{
				if ((this._品名 != value))
				{
					this._品名 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_详情", DbType="NVarChar(50)")]
		public string 详情
		{
			get
			{
				return this._详情;
			}
			set
			{
				if ((this._详情 != value))
				{
					this._详情 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_价格", DbType="Float")]
		public System.Nullable<double> 价格
		{
			get
			{
				return this._价格;
			}
			set
			{
				if ((this._价格 != value))
				{
					this._价格 = value;
				}
			}
		}
	}
	
	public partial class selectTypeResult
	{
		
		private int _编号;
		
		private string _类型;
		
		private string _品名;
		
		private string _详情;
		
		private System.Nullable<double> _价格;
		
		public selectTypeResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_编号", DbType="Int NOT NULL")]
		public int 编号
		{
			get
			{
				return this._编号;
			}
			set
			{
				if ((this._编号 != value))
				{
					this._编号 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_类型", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string 类型
		{
			get
			{
				return this._类型;
			}
			set
			{
				if ((this._类型 != value))
				{
					this._类型 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_品名", DbType="NVarChar(50)")]
		public string 品名
		{
			get
			{
				return this._品名;
			}
			set
			{
				if ((this._品名 != value))
				{
					this._品名 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_详情", DbType="NVarChar(50)")]
		public string 详情
		{
			get
			{
				return this._详情;
			}
			set
			{
				if ((this._详情 != value))
				{
					this._详情 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_价格", DbType="Float")]
		public System.Nullable<double> 价格
		{
			get
			{
				return this._价格;
			}
			set
			{
				if ((this._价格 != value))
				{
					this._价格 = value;
				}
			}
		}
	}
	
	public partial class user_orderResult
	{
		
		private int _订单号;
		
		private string _备注;
		
		private System.Nullable<int> _配置方案号;
		
		private string _员工;
		
		private System.Nullable<double> _成交价;
		
		private string _日期;
		
		private System.Nullable<int> _状态;
		
		public user_orderResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_订单号", DbType="Int NOT NULL")]
		public int 订单号
		{
			get
			{
				return this._订单号;
			}
			set
			{
				if ((this._订单号 != value))
				{
					this._订单号 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_备注", DbType="NVarChar(40)")]
		public string 备注
		{
			get
			{
				return this._备注;
			}
			set
			{
				if ((this._备注 != value))
				{
					this._备注 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_配置方案号", DbType="Int")]
		public System.Nullable<int> 配置方案号
		{
			get
			{
				return this._配置方案号;
			}
			set
			{
				if ((this._配置方案号 != value))
				{
					this._配置方案号 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_员工", DbType="NVarChar(20)")]
		public string 员工
		{
			get
			{
				return this._员工;
			}
			set
			{
				if ((this._员工 != value))
				{
					this._员工 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_成交价", DbType="Float")]
		public System.Nullable<double> 成交价
		{
			get
			{
				return this._成交价;
			}
			set
			{
				if ((this._成交价 != value))
				{
					this._成交价 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_日期", DbType="NVarChar(30)")]
		public string 日期
		{
			get
			{
				return this._日期;
			}
			set
			{
				if ((this._日期 != value))
				{
					this._日期 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_状态", DbType="Int")]
		public System.Nullable<int> 状态
		{
			get
			{
				return this._状态;
			}
			set
			{
				if ((this._状态 != value))
				{
					this._状态 = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
